/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface LiquidationStrategyImplContract
  extends Truffle.Contract<LiquidationStrategyImplInstance> {
  "new"(
    meta?: Truffle.TransactionDetails
  ): Promise<LiquidationStrategyImplInstance>;
}

export interface SettingArrayChanged {
  name: "SettingArrayChanged";
  args: {
    name: string;
    value: BN[];
    0: string;
    1: BN[];
  };
}

export interface SettingChanged {
  name: "SettingChanged";
  args: {
    name: string;
    value: BN;
    0: string;
    1: BN;
  };
}

type AllEvents = SettingArrayChanged | SettingChanged;

export interface LiquidationStrategyImplInstance
  extends Truffle.ContractInstance {
  currentLiquidationFactorBIPS(
    _agentVault: string,
    _vaultCR: number | BN | string,
    _poolCR: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<{ 0: BN; 1: BN }>;

  getSettings(txDetails?: Truffle.TransactionDetails): Promise<string>;

  methods: {
    currentLiquidationFactorBIPS(
      _agentVault: string,
      _vaultCR: number | BN | string,
      _poolCR: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<{ 0: BN; 1: BN }>;

    getSettings(txDetails?: Truffle.TransactionDetails): Promise<string>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
